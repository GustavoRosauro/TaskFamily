{"version":3,"sources":["App.js","serviceWorker.js","index.js","logo.svg"],"names":["App","useState","lista","setLista","listaFilter","setListaFilter","show","setShow","editShow","setEditShow","id","titulo","descricao","finalizado","itemEdit","setItemEdit","handleClose","a","carregar","navigator","serviceWorker","register","notification","Notification","permission","ready","then","reg","showNotification","body","handleCloseEdit","useEffect","requestPermission","axios","get","data","console","log","salvar","post","item","deletar","delete","deletarTodos","alterar","novoItem","sendItem","put","HandleInputChange","e","target","name","value","editItem","className","onClick","style","float","colSpan","placeholder","onChange","filter","x","toUpperCase","includes","map","key","type","checked","handleShowEdit","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","variant","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.c32b35bb.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {Modal,Button} from 'react-bootstrap'\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\nimport { request } from 'http';\nconst App = () => {\n  const [lista,setLista] = useState([]);\n  const [listaFilter,setListaFilter] = useState([]);\n  const [show, setShow] = useState(false);\n  const [editShow,setEditShow] = useState(false);\n  const [itemEdit, setItemEdit] = useState({\n    id:0,\n    titulo:'',\n    descricao:'',\n    finalizado:0    \n  })\n  const handleClose = async() => {\n    setShow(false)\n    await carregar();\n  }  \n  navigator.serviceWorker.register('sw.js');\n  const notification = ()=>{    \n    if(Notification.permission === 'granted'){\n      navigator.serviceWorker.ready.then((reg)=>{\n        reg.showNotification('Novo Item',{\n          body:'Novo Item foi Adicionado'\n        })\n      })\n      // const notification = new Notification('Novo Item Adicionado',{\n      //   body:'Adicionado nova marcação'\n      // })\n    }\n  }\n  const handleShow = () => setShow(true);\n\n  const handleCloseEdit = async() => {\n    setEditShow(false)\n    await carregar();\n  }\n  const handleShowEdit = (item) => {\n    setItemEdit(item)\n    setEditShow(true)\n  };\n  useEffect(async()=>{\n    if(Notification.permission !== 'granted'){\n      await Notification.requestPermission();\n    }\n    await carregar();\n    \n  },[])\n  const carregar = async()=>{\n    let data = await axios.get('/tasks');\n    setLista(data.data);\n    setListaFilter(data.data);\n    console.log(data.data);\n  }\n  const salvar = async()=>{\n    await axios.post('/tasks',item).then(async()=>{\n      handleClose();\n      await notification();\n    });   \n  }\n  const deletar = async (id)=>{\n     await axios.delete(`/tasks/${id}`).then(async()=>{\n       await carregar();\n     });    \n  }\n  const deletarTodos = async ()=>{\n    await axios.delete(`/tasks`).then(async()=>{\n      await carregar();\n    });    \n }\n \n const alterar = async(novoItem)=>{\n   let sendItem ={    \n    finalizado: novoItem.finalizado == \"0\"?\"1\":\"0\"\n   }\n  await axios.put(`/tasks/${novoItem.id}`,sendItem).then(async()=>{\n    await carregar();\n  })\n }\n const HandleInputChange = (e) =>{\n   const {name,value} = e.target;\n   setItemEdit({\n     ...itemEdit,[name]: value\n   }) \n }\n const editItem = async()=>{\n    let data  = await axios.put(`/tasksItem/${itemEdit.id}`,itemEdit);\n    await handleCloseEdit();   \n    await notification();\n }\n  let item = {\n    titulo:'',\n    descricao:'',\n    finalizado:0\n  }\n  return (\n    <div className='col-md-12'>\n      <h1>Marcador Tarefas</h1>\n      <button className='btn btn-primary btn-sm' onClick={handleShow}>Cadastrar Item</button>\n      <button className='btn btn-danger btn-sm' style={{float:'right'}} onClick={()=>deletarTodos()}>Remover todos os itens</button>\n      <table className='table table-striped'>\n        <thead>\n          <tr>\n            <th>Titulo</th>\n            <th>Descricao</th>\n            <th>Finalizado</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n          <td colSpan={\"3\"}><input className=\"form-control\" placeholder='Titulo.....' onChange={(e)=>setLista(listaFilter.filter(x => x.titulo.toUpperCase().includes(e.target.value.toUpperCase())))}/></td>\n          </tr>\n          {\n            lista.map(item =>\n              <tr key={item.id}>\n                <td>{item.titulo}</td>\n                <td>{item.descricao}</td>\n                <td><input type={'checkbox'} checked={item.finalizado === \"1\"} onChange={()=>alterar(item)}/></td>\n                <td><button className='btn btn-danger btn-sm' onClick={()=>deletar(item.id)}>Remover</button> || <button className=\"btn btn-warning btn-sm\" onClick={()=>handleShowEdit(item)}>Editar</button></td>\n              </tr>)\n          }\n        </tbody>\n      </table>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Cadastrar Item</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <label>Titulo</label>\n          <input className='form-control' onChange={(e)=>item.titulo = e.target.value}/>\n          <label>Descricao</label>\n          <input className='form-control' onChange={(e)=>item.descricao = e.target.value}/>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Fechar\n          </Button>\n          <Button variant=\"primary\" onClick={salvar}>\n            Salvar\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal show={editShow} onHide={handleCloseEdit}>\n        <Modal.Header closeButton>\n          <Modal.Title>Editar Item</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <label>Titulo</label>\n          <input className='form-control' name=\"titulo\" value={itemEdit.titulo} onChange={HandleInputChange}/>\n          <label>Descricao</label>\n          <input className='form-control' name=\"descricao\" value={itemEdit.descricao} onChange={HandleInputChange}/>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleCloseEdit}>\n            Fechar\n          </Button>\n          <Button variant=\"primary\" onClick={editItem}>\n            Salvar\n          </Button>\n        </Modal.Footer>\n      </Modal>      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}